-- SELECT Data we are going to be using 

SELECT *
FROM `astral-theory-379217.covid.CovidDeaths` 
WHERE continent is not null
ORDER By 3,4

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM `astral-theory-379217.covid.CovidDeaths` 
WHERE continent is not null
ORDER BY 1, 2

-- Total Cases VS Total Deaths
-- Shows How Likelihood of Death if you get Covid in your country

SELECT location, date, total_cases, total_deaths, (Total_deaths/Total_cases)*100 as DeathPercentage
FROM `astral-theory-379217.covid.CovidDeaths` 
WHERE location like '%States%' AND continent is not null
ORDER BY 1, 2

-- Looking at Total Cases vs Population
-- Shows what percentage of population got Covid

SELECT location, date, total_cases, population, (total_cases/population)*100 as PercentPopulationInfected
FROM `astral-theory-379217.covid.CovidDeaths` 
WHERE location like '%States%' AND continent is not null
ORDER BY 1, 2

-- Looking at Countries with Highest Infection Rate Compare to Population

SELECT location, MAX(total_cases) as HighestInfectionCount, population, MAX((total_cases/population))*100 as PercentPopulationInfected
FROM `astral-theory-379217.covid.CovidDeaths` 
WHERE continent is not null
GROUP BY Location, population
ORDER BY PercentPopulationInfected desc

-- Showing Countries with the highest death count per Population

SELECT location, Max(cast(total_deaths as int)) as TotalDeathCount
FROM `astral-theory-379217.covid.CovidDeaths` 
WHERE continent is not null
GROUP BY location
ORDER BY TotalDeathCount DESC

-- --Showing Continents with Highest Death Count Per Population 

SELECT Continent, Max(cast(total_deaths as int)) as TotalDeathCount
FROM `astral-theory-379217.covid.CovidDeaths` 
WHERE continent is not null
GROUP BY continent
ORDER BY TotalDeathCount DESC

--Global Numbers 
--Death Percentage across the world

SELECT SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, 
SUM(cast(new_deaths as int))/SUM(new_cases)*100 as DeathPercentage
FROM `astral-theory-379217.covid.CovidDeaths` 
WHERE continent is not null 
ORDER BY 1,2

--Creating View to store later for data viz

SELECT SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, 
SUM(cast(new_deaths as int))/SUM(new_cases)*100 as DeathPercentage
FROM `astral-theory-379217.covid.CovidDeaths` 
WHERE continent is not null 
ORDER BY 1, 2


--Joining both Tables (Death and Vaccinations)
SELECT *
FROM `astral-theory-379217.covid.CovidDeaths` as dea
JOIN `astral-theory-379217.covid.CovidVaccinations` as vac
ON dea.location = vac.location
and dea.date = vac.date

-- Population vs Vaccinations (Partition By)

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(Cast(vac.new_vaccinations as int)) OVER (Partition By dea.location Order by dea.location,dea.date) AS RollingPeopleVaccinated
FROM `astral-theory-379217.covid.CovidDeaths` as dea
JOIN `astral-theory-379217.covid.CovidVaccinations` as vac
ON dea.location = vac.location
and dea.date = vac.date
WHERE dea.continent is not null
ORDER BY 1,2,3


-- Temp Table
DROP TABLE if exists PercentPopulationVaccinated
CREATE TABLE PercentPopulationVaccinated
(Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)


Insert Into PercentPopluationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(Cast(vac.new_vaccinations as int)) OVER (Partition By dea.location Order by dea.location,dea.date) AS RollingPeopleVaccinated
FROM `astral-theory-379217.covid.CovidDeaths` as dea
JOIN `astral-theory-379217.covid.CovidVaccinations` as vac
ON dea.location = vac.location
and dea.date = vac.date
WHERE dea.continent is not null
ORDER BY 1,2,3

SELECT *, (RolingPeopleVaccinated/population)*100
FROM #PercentPopluationVaccinated
